#!/bin/sh

# We read proprietary_files.txt
# For each line, we check whether it is commented out, ("#"),
# whether it contains a filename ("/") and to which vendor package it belongs.

set -e

DEVICE=kai
VENDORS="broadcom invensense nvidia widevine"

for FILE in `cat proprietary-files.txt`; do
  case $FILE in
    "#"*)
      echo Commented: $FILE
      for i in $VENDORS; do
        if [[ "$i" == "$(echo $FILE | sed s'/#//')" ]] ; then
          VENDOR=$i
          OUTDIR="../../../vendor/$VENDOR/$DEVICE"
        fi
      done
      ;;
    *"/"*)
      if [ -e $OUTDIR/proprietary/$(basename $FILE) ] ; then
# REMOVE ECHO STATEMENT LATER
        echo cp lenovo-kai-proprietary/$FILE $OUTDIR/proprietary/$(basename $FILE)
      elif [ ! -e $OUTDIR/proprietary/$(basename $FILE) ] ; then
         # The first time we encounter a new file:
         # make a new device-partial.mk file
         if [ ! -e $OUTDIR/device-partial.mk.new ] ; then
           (cat << EOF) > $OUTDIR/device-partial.mk.new
# Copyright (C) 2011 The CyanogenMod Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file is generated by device/lenovo/kai/setup-makefiles.sh
EOF

           # Then, cat the existing device-partial.mk into the new makefile
           for j in $(cat ../../../$OUTDIR/device-partial.mk | grep -v \# | awk {'print $1'}` ) ; do
#TODO         # IF IT SHOULD NOT BE REMOVED, e.g., gralloc.tegra3.so
              echo "    $(basename $FILE) \\" \>\> OUTDIR/device-partial.mk.new
           done

           # Also do this for the Android.mk file in the proprietary directory
           LENGTH=$(wc -l $OUTDIR/proprietary/Android.mk | awk {'print $1'}`
           LENGTH=`expr $LENGTH -1 `
# REMOVE HASH IN LINE BELOW LATER
           head $OUTDIR/proprietary/Android.mk -n $LENGTH #> $OUTDIR/proprietary/Android.mk.new
         fi

         # We need to set several fields:
         LOCAL_SRC_FILES=$(basename $FILE)
         LOCAL_MODULE_SUFFIX=".$(echo $LOCAL_SRC_FILES | rev | awk -F . '{print $1}' | rev)"
         LOCAL_MODULE=$(echo $LOCAL_SRC_FILES | tr $LOCAL_MODULE_SUFFIX)
         LOCAL_MODULE_CLASS= # one of EXECUTABLES (no module suffix), SHARED_LIBRARIES (filename ends .so), APPS for an apk, or ETC (any other)
                             # Actually, much simpler, executables have a dirname that starts with bin.
         LOCAL_MODULE_PATH=$(dirname $FILE)
         LOCAL_MODULE_OWNER=$(echo $VENDOR | sed -e 's/\(.*\)/\L\1/')

         # Now echo the new module to Android.mk.new (note the trailing line of whitespace):
# REMOVE BACKSLASHES LATER
         echo include \$(CLEAR_VARS\) \>\> $OUTDIR/proprietary/Android.mk
# REMOVE BACKSLASHES LATER
         echo LOCAL_MODULE := $LOCAL_MODULE \>\> $OUTDIR/proprietary/Android.mk.new
# REMOVE BACKSLASHES LATER
         echo LOCAL_SRC_FILES := $LOCAL_SRC_FILES \>\> $OUTDIR/proprietary/Android.mk.new
# REMOVE BACKSLASHES LATER
         echo LOCAL_MODULE_SUFFIX := $LOCAL_MODULE_SUFFIX  \>\> $OUTDIR/proprietary/Android.mk.new
# REMOVE BACKSLASHES LATER
         echo LOCAL_MODULE_CLASS := $LOCAL_MODULE_CLASS \>\> $OUTDIR/proprietary/Android.mk.new
# REMOVE BACKSLASHES LATER
         echo LOCAL_MODULE_PATH := \$\(TARGET_OUT\)/$LOCAL_MODULE_PATH \>\> $OUTDIR/proprietary/Android.mk.new
# REMOVE BACKSLASHES LATER
         echo LOCAL_MODULE_TAGS := optional \>\> $OUTDIR/proprietary/Android.mk.new
# REMOVE BACKSLASHES LATER
         echo LOCAL_MODULE_OWNER := $LOCAL_MODULE_OWNER \>\> $OUTDIR/proprietary/Android.mk.new
# REMOVE BACKSLASHES LATER
         echo include \$\(BUILD_PREBUILT\) \>\> $OUTDIR/proprietary/Android.mk.new
# REMOVE BACKSLASHES LATER
         echo  \>\> $OUTDIR/proprietary/Android.mk.new

      fi
      ;;
  esac
done

# Now deal with the new makefiles
for k in $VENDORS; do
  if [ -e ../../../vendor/$k/$DEVICE/device-partial.mk.new ] ; then
    # Deal with trailing slashes in device-partial.mk
    LENGTH=$(wc -l ../../../vendor/$k/$DEVICE/device-partial.mk.new | awk {'print $1'}`
    LENGTH=`expr $LENGTH -1 `
# REMOVE COMMENT LATER
    head -n $LENGTH ../../../vendor/$k/$DEVICE/device-partial.mk.new # > ../../../vendor/$k/$DEVICE/device-partial.mk
# REMOVE COMMENT LATER
    tail -n 1 ../../../vendor/$k/$DEVICE/device-partial.mk.new | sed 's/\\//g' # > ../../../vendor/$k/$DEVICE/device-partial.mk

    mv ../../../vendor/$k/$DEVICE/proprietary/Android.mk.new ../../../vendor/$k/$DEVICE/proprietary/Android.mk
# REMOVE BACKSLASHES LATER
    echo endif \>\> ../../../vendor/$k/$DEVICE/proprietary/Android.mk 
  fi
done
